/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEF 0
#define NAV 1
#define FN  2
#define NUM 3
#define SYS 4

#define ___    &trans
#define CANCEL &kp K_CANCEL

&sk {
    release_after-ms = <900>;
    quick-release;
}

&sl {
    ignore-modifiers;
}

&lt {
    flavor = "balanced";
    tapping-term-ms = <200>;
    quick-tap-ms = <0>;
}

// sticky-shift stuff goes here
&caps_word {  // mods deactivate caps-word, requires PR #1451
    /delete-property/ ignore-modifiers;
};

ZMK_CONDITIONAL_LAYER(FN NUM, SYS)

/ {
    behaviors {
        // tap: sticky-shift / double-tap: caps-word | hold: shift
        smart_shft {
            compatible = "zmk,behavior-tap-dance";
            label = "SMART_SHIFT";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&sk LSHFT>, <&caps_word>
        };
        hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MOD_LEFT";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            global-quick-tap-ms = <150>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 36 37 38 39 40 41;
            hold-trigger-on-release;
        }
        hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MOD_RIGHT";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            global-quick-tap-ms = <150>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41;
            hold-trigger-on-release;
        }
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
// -----------------------------------------------------------------------------------------
// | TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U  |  I  |  O  |  P  | "|" |
// | ESC |  A  |  S  |  D  |  F  |  G  |   |  H  |  J  |  K  |  L  |  ;  |  '  |
// | SHT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M  |  ,  |  .  |  /  |  -  |
//                   | GUI | ENT | SPC |   | SFT | BSP | TAB |
            bindings = <
   &kp TAB   &kp Q       &kp W        &kp E       &kp R        &kp T         /*|*/ &kp Y       &kp U         &kp I       &kp O        &kp P          &kp PIPE
   &kp ESC   &hml LALT A &hml LCTRL S &hml LGUI D &hml LSHFT F &kp G         /*|*/ &kp H       &hmr RSHFT J  &hmr LGUI K &hmr LCTRL L &hmr LALT SEMI &kp SQT
   &kp LSHFT &kp Z       &kp X        &kp C       &kp V        &kp B         /*|*/ &kp N       &kp M         &kp COMMA   &kp DOT      &kp FSLH       &kp MINUS
                                    &kp LGUI   &lt FN RET  &lt NAV SPACE /*|*/ &smart_shft &lt NUM BSPC &kp TAB
            >;
        };

        nav_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//            | GUI |     | SPC |   | ENT |     | ALT |
            bindings = <
   &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSPC
   &kp LCTRL ___      ___    ___      ___      ___         &kp MINUS &kp EQUAL &kp LBKT    &kp RBKT &kp BSLH &kp GRAVE
   &kp LSHFT ___      ___    ___      ___      ___         &kp UNDER &kp PLUS  &kp LBRC    &kp RBRC &kp PIPE &kp TILDE
                             ___      ___      ___         CANCEL    ___       ___
            >;
        };

        fn_layer {
// -----------------------------------------------------------------------------------------
// |     |     |     |     |     |     |   |     |     |     |     |     |     |
// |     |     |     |     |     |     |   |     |     |     |     |     |     |
// |     |     |     |     |     |     |   |     |     |     |     |     |     |
//                   |     |     |     |   |     |     |     |
            bindings = <
   ___ ___ ___ ___ ___ ___ /*|*/ ___ ___ ___ ___ ___ ___
   ___ ___ ___ ___ ___ ___ /*|*/ ___ ___ ___ ___ ___ ___
   ___ ___ ___ ___ ___ ___ /*|*/ ___ ___ ___ ___ ___ ___
               ___ ___ ___ /*|*/ ___ ___ ___   
            >;
        };

        num_layer {
// -----------------------------------------------------------------------------------------
// |     |     |  &  |  *  |     |  {  |   |  }  |  7  |  8  |  9  |     |     |
// |     |  _  |  $  |  %  |  ^  |  (  |   |  )  |  4  |  5  |  6  |  -  |     |
// |     |  =  |  !  |  @  |  #  |  \  |   |  0  |  1  |  2  |  3  |  +  |     |
//                   |     |     |     |   |     |     |     |
            bindings = <
   ___    ___             &kp AMPS        &kp STAR        ___              &kp LBRC  /*|*/ &kp RBRC &kp N7        &kp N8           &kp N9        &kp BSPC           ___   
   ___    &hml LALT UNDER &hml LCTRL DLLR &hml LGUI PRCNT &hml RSHFT CARET &kp LPAR  /*|*/ &kp RPAR &hmr RSHFT N4 &hmr LGUI N5     &hmr LCTRL N6 &hmr LALT KP_MINUS ___   
   ___    &kp EQUAL       &kp EXCL        &kp AT          &kp HASH         &kp BSLH  /*|*/ &kp N0   &kp N1        &kp N2           &kp N3        &kp KP_PLUS        ___   
                                        ___            ___             ___       /*|*/ ___      ___          ___   
            >;
        };

        sys_layer {
// -----------------------------------------------------------------------------------------
// |BTCLR| BT0 | BT1 | BT2 | BT3 | BT4 |   |     |     |     |     |     |     |
// |     |     |     |     |     |BOOTL|   |BOOTL|     |     |     |     |     |
// |     |     |     |     |     |RESET|   |RESET|     |     |     |     |     |
//                   |     |     |     |   |     |     |     |
            bindings = <
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4  /*|*/ ___         ___    ___    ___    ___    ___   
   ___        ___          ___          ___          ___          &bootloader   /*|*/ &bootloader ___    ___    ___    ___    ___   
   ___        ___          ___          ___          ___          &sys_reset    /*|*/ &sys_reset  ___    ___    ___    ___    ___    
                                        ___          ___          ___           /*|*/ ___         ___    ___    
            >;
        };
    };
};
